"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/chatbot/page",{

/***/ "(app-pages-browser)/./lib/hooks/useSTT.ts":
/*!*****************************!*\
  !*** ./lib/hooks/useSTT.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSTT: function() { return /* binding */ useSTT; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst useSTT = function() {\n    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const { language = \"ko-KR\", continuous = false, interimResults = true } = options;\n    const [isListening, setIsListening] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [transcript, setTranscript] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [isSupported, setIsSupported] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [recognition, setRecognition] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        console.log(\"useSTT: Checking browser support...\");\n        // 브라우저 지원 여부 확인\n        if (!(\"webkitSpeechRecognition\" in window) && !(\"SpeechRecognition\" in window)) {\n            console.log(\"useSTT: SpeechRecognition not supported\");\n            setIsSupported(false);\n            setError(\"이 브라우저는 음성 인식을 지원하지 않습니다.\");\n            return;\n        }\n        console.log(\"useSTT: SpeechRecognition supported\");\n        setIsSupported(true);\n        // SpeechRecognition 인스턴스 생성\n        const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n        const recognitionInstance = new SpeechRecognition();\n        recognitionInstance.continuous = continuous;\n        recognitionInstance.interimResults = interimResults;\n        recognitionInstance.lang = language;\n        console.log(\"useSTT: Recognition instance created with language:\", language);\n        // 이벤트 핸들러 설정\n        recognitionInstance.onstart = ()=>{\n            console.log(\"useSTT: Recognition started\");\n            setIsListening(true);\n            setError(null);\n        };\n        recognitionInstance.onresult = (event)=>{\n            console.log(\"useSTT: Recognition result received\", event.results.length, \"results\");\n            let finalTranscript = \"\";\n            let interimTranscript = \"\";\n            for(let i = event.resultIndex; i < event.results.length; i++){\n                const transcript = event.results[i][0].transcript;\n                console.log(\"useSTT: Result\", i, \"isFinal:\", event.results[i].isFinal, \"transcript:\", transcript);\n                if (event.results[i].isFinal) {\n                    finalTranscript += transcript;\n                } else {\n                    interimTranscript += transcript;\n                }\n            }\n            const newTranscript = finalTranscript + interimTranscript;\n            console.log(\"useSTT: Setting transcript:\", newTranscript);\n            setTranscript(newTranscript);\n        };\n        recognitionInstance.onerror = (event)=>{\n            console.error(\"useSTT: Recognition error:\", event.error, event.message);\n            setIsListening(false);\n            setError(\"음성 인식 오류: \".concat(event.error));\n        };\n        recognitionInstance.onend = ()=>{\n            console.log(\"useSTT: Recognition ended\");\n            setIsListening(false);\n        };\n        setRecognition(recognitionInstance);\n        return ()=>{\n            if (recognitionInstance) {\n                console.log(\"useSTT: Cleaning up recognition instance\");\n                recognitionInstance.stop();\n            }\n        };\n    }, [\n        language,\n        continuous,\n        interimResults\n    ]);\n    const startListening = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        console.log(\"useSTT: startListening called, isSupported:\", isSupported, \"recognition:\", !!recognition);\n        if (!isSupported || !recognition) {\n            setError(\"음성 인식을 사용할 수 없습니다.\");\n            return;\n        }\n        try {\n            // STT 시작 시 transcript를 초기화하지 않음 (기존 입력값 유지)\n            setError(null);\n            recognition.start();\n            console.log(\"useSTT: Recognition.start() called\");\n        } catch (err) {\n            console.error(\"useSTT: Error starting recognition:\", err);\n            setError(\"음성 인식을 시작할 수 없습니다.\");\n        }\n    }, [\n        isSupported,\n        recognition\n    ]);\n    const stopListening = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        console.log(\"useSTT: stopListening called\");\n        if (recognition) {\n            recognition.stop();\n        }\n    }, [\n        recognition\n    ]);\n    const resetTranscript = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        console.log(\"useSTT: resetTranscript called\");\n        setTranscript(\"\");\n        setError(null);\n    }, []);\n    return {\n        isListening,\n        transcript,\n        isSupported,\n        startListening,\n        stopListening,\n        resetTranscript,\n        error\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/useSTT.ts\n"));

/***/ })

});